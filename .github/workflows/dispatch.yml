name: Build and scan image

on:
  workflow_dispatch:

jobs:
  ghcr:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      packages: write
      id-token: write
    strategy:
      matrix:
        repo:
          - "ghcr.io"
        publish:
          - true
          - false
        add-latest:
          - true
          - false
        dependency-graph:
          - true
          - false
        exclude:
          - publish: false
            add-latest: true
        include:
          - publish: false
            add-latest: false
            dependency-graph: true
            name: "csa-demo-ghcr-deps-no-push"
          - publish: true
            add-latest: false
            dependency-graph: true
            name: "csa-demo-ghcr-deps-no-latest"
          - publish: true
            add-latest: true
            dependency-graph: true
            name: "csa-demo-ghcr-deps-latest"
          - publish: false
            add-latest: false
            dependency-graph: false
            name: "csa-demo-ghcr-no-push"
          - publish: true
            add-latest: false
            dependency-graph: false
            name: "csa-demo-ghcr-no-latest"
          - publish: true
            add-latest: true
            dependency-graph: false
            name: "csa-demo-ghcr-latest"
    steps:
      - uses: drewbernetes/container-security-action@v0.0.3
        with:
          image-repo: "ghcr.io"
          repo-username: ${{ github.repository_owner }}
          repo-password: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ matrix.name }}
          image-tag: "1.0"
          check-severity: CRITICAL
          trivyignore-from-s3: true
          s3-endpoint: "https://api.s3.hudson-viles.uk"
          s3-access-key: ${{secrets.S3_ACCESS_KEY}}
          s3-secret-key: ${{secrets.S3_SECRET_KEY}}
          s3-bucket: "trivyignores"
          s3-path: "container-security-action-demo"
          add-latest-tag: ${{ matrix.add-latest }}
          publish-image: ${{ matrix.publish }}
          cosign-private-key: ${{secrets.COSIGN_KEY}}
          cosign-password: ${{secrets.COSIGN_PASSWORD}}
          cosign-tlog: false
          dockerfile-path: .
          enable-dependency-graph: ${{ matrix.dependency-graph }}
          dependency-graph-token: ${{ secrets.GITHUB_TOKEN }}
  docker:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        publish:
          - true
          - false
        add-latest:
          - true
          - false
        exclude:
          - publish: false
            add-latest: true
        include:
          - publish: false
            add-latest: false
            name: "csa-demo-docker-no-push"
          - publish: true
            add-latest: false
            name: "csa-demo-docker-no-latest"
          - publish: true
            add-latest: true
            name: "csa-demo-docker-latest"
    steps:
      - uses: drewbernetes/container-security-action@v0.0.3
        with:
          image-repo: "drewviles"
          repo-username: ${{ secrets.DOCKER_USER }}
          repo-password: ${{ secrets.DOCKER_PASSWORD }}
          image-name: ${{ matrix.name }}
          image-tag: "1.0"
          check-severity: CRITICAL
          trivyignore-from-s3: true
          s3-endpoint: "https://api.s3.hudson-viles.uk"
          s3-access-key: ${{secrets.S3_ACCESS_KEY}}
          s3-secret-key: ${{secrets.S3_SECRET_KEY}}
          s3-bucket: "trivyignores"
          s3-path: "container-security-action-demo"
          add-latest-tag: ${{ matrix.add-latest }}
          publish-image: ${{ matrix.publish }}
          cosign-private-key: ${{secrets.COSIGN_KEY}}
          cosign-password: ${{secrets.COSIGN_PASSWORD}}
          cosign-tlog: false
          dockerfile-path: .
  external-repos:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        publish:
          - true
          - false
        add-latest:
          - true
          - false
        exclude:
          - publish: false
            add-latest: true
        include:
          - publish: false
            add-latest: false
            name: "csa-demo-external-no-push"
          - publish: true
            add-latest: false
            name: "csa-demo-external-no-latest"
          - publish: true
            add-latest: true
            name: "csa-demo-external-latest"
    steps:
      - uses: drewbernetes/container-security-action@v0.0.3
        with:
          image-repo: "registry.hudson-viles.uk/public"
          repo-username: ${{ secrets.REGISTRY_PUBLIC_USER }}
          repo-password: ${{ secrets.REGISTRY_PUBLIC_PASSWORD }}
          image-name: ${{ matrix.name }}
          image-tag: "1.0"
          check-severity: CRITICAL
          trivyignore-from-s3: true
          s3-endpoint: "https://api.s3.hudson-viles.uk"
          s3-access-key: ${{secrets.S3_ACCESS_KEY}}
          s3-secret-key: ${{secrets.S3_SECRET_KEY}}
          s3-bucket: "trivyignores"
          s3-path: "container-security-action-demo"
          add-latest-tag: ${{ matrix.add-latest }}
          publish-image: ${{ matrix.publish }}
          cosign-private-key: ${{secrets.COSIGN_KEY}}
          cosign-password: ${{secrets.COSIGN_PASSWORD}}
          cosign-tlog: false
          dockerfile-path: .